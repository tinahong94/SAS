/* Creating a SAS Data Set */data work.youngadult;   set orion.customer_dim;   where Customer_Gender='F' and         Customer_Age between 18 and 36 and         Customer_Group contains 'Gold';   Discount=.25;run;proc print data=work.youngadult;	var Customer_Name Customer_Age Customer_Gender Customer_Group Discount;	ID Customer_ID;run;/* challenge 2 */data work.assistant;	set orion.staff;	where Job_Title contains 'Assistant' and	Salary < 26000;	Increase=Salary*.10;	New_Salary=Salary+Increase;run;proc print data=work.assistant;	var Job_Title Salary Increase New_Salary;	ID Employee_ID;	format Salary Increase New_Salary DOLLAR10.2;run;/* challenge 3 - Include a WHERE statement in the DATA step to select only those observations in which the Customer_FirstName value sounds like Tony*/data work.tony;	set orion.customer_dim;	where Customer_FirstName=*'tony'; /*Suggested search terms: SOUNDS-LIKE operator	or syntax of WHERE expression. The SOUNDS-LIKE operator selects observations that contain a spelling variation of a specified word or words. The operator uses the Soundex algorithm to compare the variable value and the operand.*/run;proc print data=work.tony;	var Customer_FirstName CUstomer_LastName;run;/* Subsetting Observations Based on Two Conditions *//* Modify the DATA step to select only the observations with Emp_Hire_Date values on or after July 1, 2010. Subset the observations as they are being read into the PDV. */data work.increase;   set orion.staff;   where Emp_Hire_Date>='01Jul2010'd;   Increase=Salary*0.10;   NewSalary=Salary+Increase;run;/*Modify the DATA step to select only the observations that have an Increase value greater than 3000.*/data work.increase;   set orion.staff;   where Emp_Hire_Date>='01JUL2010'd;   Increase=Salary*0.10;   if Increase>3000;   NewSalary=Salary+Increase;run;/* The new data set should contain only the following variables: Employee_ID, Emp_Hire_Date, Salary, Increase, and NewSalary.*//* Add permanent labels for Employee_ID, Emp_Hire_Date, and NewSalary. Add a PROC CONTENTS step and submit the program to verify that the labels are stored in the descriptor portion of the new data set work.increase*/data work.increase;   set orion.staff;   where Emp_Hire_Date>='01JUL2010'd;   Increase=Salary*0.10;   if Increase>3000;   NewSalary=Salary+Increase;   label Employee_ID='Employee_ID'   		 Emp_Hire_Date='Hire Date'   		 NewSalary='New Annual Salary';   keep Employee_ID   		Emp_Hire_Date   		Salary   		Increase   		NewSalary;run;proc contents data=work.increase;run;/* Add permanent formats to display Salary and NewSalary with dollar signs, commas, and two decimal places, and Increase with commas and no decimal places. Add a PROC CONTENTS step and submit the program to verify that the formats are stored in the descriptor portion of the new data set work.increase. */data work.increase;   set orion.staff;   where Emp_Hire_Date>='01JUL2010'd;   Increase=Salary*0.10;   if Increase>3000;   NewSalary=Salary+Increase;   label Employee_ID='Employee_ID'   		 Emp_Hire_Date='Hire Date'   		 NewSalary='New Annual Salary';   format Salary DOLLAR10.2   		  NewSalary DOLLAR10.2   		  Increase COMMA5.;	   keep Employee_ID   		Emp_Hire_Date   		Salary   		Increase   		NewSalary;run;proc contents data=work.increase;run;/* Write a PROC PRINT step to create this report, with labels split over multiple lines. The results should contain 10 observations. */proc print data=work.increase split=' ';run;/* challenge 4 *//* Write a DATA step to create a new data set named work.delays. Use the data set orion.orders as input. Submit the code to confirm that work.delays contains 490 observations and 6 variables. */data work.delays;	set orion.orders;run;/*Modify the DATA step to create a new variable, Order_Month, and set it to the month of the Order_Date. Hint: Use an assignment statement to extract the month from the Order_Date value.*/data work.delays;	set orion.orders;	Order_Month=month(Order_Date);	where Delivery_Date>Order_Date+4 and	Employee_ID= 99999999;	if Order_Month=8;	label Order_Date='Date Ordered'		  Delivery_Date='Date Delivered'		  Order_Month='Month Ordered';	format Order_Date Delivery_Date mmddyy10.;	keep Employee_ID 		 Customer_ID 		 Order_Date 		 Delivery_Date 		 Order_Month;run;proc contents data=work.delays;run;proc print data=work.delays;run;/* Using an IF-THEN/DELETE Statement to Subset Observations*/data work.bigdonations;	set orion.employee_donations;	Total=sum(Qtr1, Qtr2, Qtr3, Qtr4);	NumQtrs=n(Qtr1,Qtr2,Qtr3,Qtr4);	/*if Total<50 or NumQtrs ne 4 then delete;*/	if Total>=50 and NumQtrs=4;	drop Recipients Paid_By;	label Employee_ID='Employee ID'		  Qtr1='First Quarter'		  Qtr2='Second Quarter'		  Qtr3='Third Quarter'		  Qtr4='Fourth Quarter';run;proc contents data=work.bigdonations;run;proc print data=work.bigdonations label noobs split=' ';run;